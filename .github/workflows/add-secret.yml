name: Secret creator

on:
  workflow_dispatch:
    inputs:
      secretName:
        description: 'Define name of secret'
        required: true
      secretValue:
        description: 'Define secret in base64 format'     
        required: true
jobs:
  add-secret:
    runs-on: ubuntu-latest
    # env:
    #   ${{ github.event.inputs.secretName }}: ${{ github.event.inputs.secretName }}
    #   SECRET_TOKEN: ${{ github.event.inputs.secretValue }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Instlal git-crypt
      run: sudo apt-get install -y git-crypt

    - name: Unlock secrets
      # uses: sliteteam/github-action-git-crypt-unlock@1.2.0
      # env:
      #   GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      run: |
        echo ${{ secrets.GIT_CRYPT_KEY }} | base64  -d > ./git-crypt-key
        git-crypt unlock ./git-crypt-key
        rm ./git-crypt-key

    # - name: echo
    #   run: |
    #     echo "::stop-commands::pause-logging"
    #     echo "Secret value: ${{ github.event.inputs.secretValue }}"
    #     echo "Secret name : ${{ github.event.inputs.secretName }}"
    - name: Save to file
      id: save
      run: |
        value=${{ github.event.inputs.secretValue }}
        echo "::add-mask::$value"
        echo "::set-output name=secret-value::$value"
        echo ${{ steps.save.outputs.secret-value }}
      # echo $secret-value | base64 -d > secure/${{ github.event.inputs.secretName }}.json
    # - name: Push to repo
    #   run: |
    #     git config --local user.email "bot@users.noreply.github.com"
    #     git config --local user.name "github-actions[bot]"
    #     git add secure/${{ github.event.inputs.secretName }}.json
    #     git commit -m "add secret" -a
    #     git push
    # - name: Create PR to applications-infra
    #   uses: peter-evans/create-pull-request@v3
    #   with:
    #     branch: feature/add-${{ github.event.inputs.secretName }}-secret
    #     title: Add ${{ github.event.inputs.secretName }}" secret
    #     commit-message: Add ${{ github.event.inputs.secretName }}" secret
    #     body: secret manager